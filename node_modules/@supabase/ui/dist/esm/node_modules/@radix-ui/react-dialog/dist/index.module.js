import { hideOthers } from '../../../aria-hidden/dist/es2015/index.js';
import o from '../../../react-remove-scroll/dist/es2015/Combination.js';
import { useFocusGuards } from '../../react-focus-guards/dist/index.module.js';
import { Primitive } from '../../react-primitive/dist/index.module.js';
import { Presence } from '../../react-presence/dist/index.module.js';
import { Portal } from '../../react-portal/dist/index.module.js';
import { FocusScope } from '../../react-focus-scope/dist/index.module.js';
import { DismissableLayer } from '../../react-dismissable-layer/dist/index.module.js';
import { useControllableState } from '../../react-use-controllable-state/dist/index.module.js';
import { useId } from '../../react-id/dist/index.module.js';
import { createContext } from '../../react-context/dist/index.module.js';
import { useComposedRefs } from '../../react-compose-refs/dist/index.module.js';
import { composeEventHandlers } from '../../primitive/dist/index.module.js';
import * as React from 'react';
import _extends from '../../../@babel/runtime/helpers/esm/extends.js';

const[g,D]=createContext("Dialog");const Dialog=e=>{const{children:t,open:o,defaultOpen:r,onOpenChange:n,modal:a=!0}=e,i=React.useRef(null),[l=!1,u]=useControllableState({prop:o,defaultProp:r,onChange:n});return React.createElement(g,{triggerRef:i,contentId:useId(),titleId:useId(),descriptionId:useId(),open:l,onOpenChange:u,onOpenToggle:React.useCallback((()=>u((e=>!e))),[u]),modal:a},t)};const DialogTrigger=/*#__PURE__*/React.forwardRef(((e,t)=>{const o=D("DialogTrigger"),n=useComposedRefs(t,o.triggerRef);return React.createElement(Primitive.button,_extends({type:"button","aria-haspopup":"dialog","aria-expanded":o.open,"aria-controls":o.contentId,"data-state":E(o.open)},e,{ref:n,onClick:composeEventHandlers(e.onClick,o.onOpenToggle)}))}));const DialogOverlay=/*#__PURE__*/React.forwardRef(((e,t)=>{const{forceMount:o,...r}=e,a=D("DialogOverlay");return a.modal?/*#__PURE__*/React.createElement(Presence,{present:o||a.open},/*#__PURE__*/React.createElement(v,_extends({},r,{ref:t}))):null}));const v=/*#__PURE__*/React.forwardRef(((e,t)=>{const o=D("DialogOverlay");return React.createElement(Portal,null,/*#__PURE__*/React.createElement(Primitive.div,_extends({"data-state":E(o.open)},e,{ref:t})))}));const DialogContent=/*#__PURE__*/React.forwardRef(((e,t)=>{const{forceMount:o,...r}=e,a=D("DialogContent");return React.createElement(Presence,{present:o||a.open},a.modal?/*#__PURE__*/React.createElement(x,_extends({},r,{ref:t})):/*#__PURE__*/React.createElement(C,_extends({},r,{ref:t})))}));const x=/*#__PURE__*/React.forwardRef(((o$1,r)=>{const n=D("DialogContent"),i=React.useRef(null),l=useComposedRefs(r,i);return React.useEffect((()=>{const t=i.current;if(t)return hideOthers(t)}),[]),/*#__PURE__*/React.createElement(Portal,null,/*#__PURE__*/React.createElement(o,null,/*#__PURE__*/React.createElement(b,_extends({},o$1,{ref:l,trapFocus:n.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:composeEventHandlers(o$1.onCloseAutoFocus,(e=>{var t;e.preventDefault(),null===(t=n.triggerRef.current)||void 0===t||t.focus();})),onPointerDownOutside:composeEventHandlers(o$1.onPointerDownOutside,(e=>{const t=e.detail.originalEvent,o=0===t.button&&!0===t.ctrlKey;(2===t.button||o)&&e.preventDefault();})),onFocusOutside:composeEventHandlers(o$1.onFocusOutside,(e=>e.preventDefault()))}))))})),C=/*#__PURE__*/React.forwardRef(((e,t)=>{const o=D("DialogContent"),r=React.useRef(!1);return React.createElement(Portal,null,/*#__PURE__*/React.createElement(b,_extends({},e,{ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:t=>{var n,a;(null===(n=e.onCloseAutoFocus)||void 0===n||n.call(e,t),t.defaultPrevented)||(r.current||null===(a=o.triggerRef.current)||void 0===a||a.focus(),t.preventDefault());r.current=!1;},onInteractOutside:t=>{var n,a;null===(n=e.onInteractOutside)||void 0===n||n.call(e,t),t.defaultPrevented||(r.current=!0);const i=t.target;(null===(a=o.triggerRef.current)||void 0===a?void 0:a.contains(i))&&t.preventDefault();}})))})),b=/*#__PURE__*/React.forwardRef(((e,t)=>{const{"aria-label":r,"aria-labelledby":n,"aria-describedby":a,trapFocus:c,onOpenAutoFocus:s,onCloseAutoFocus:u,...p}=e,g=D("DialogContent"),v=React.useRef(null),x=useComposedRefs(t,v);return useFocusGuards(),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FocusScope,{asChild:!0,loop:!0,trapped:c,onMountAutoFocus:s,onUnmountAutoFocus:u},/*#__PURE__*/React.createElement(DismissableLayer,_extends({role:"dialog",id:g.contentId,"aria-describedby":a||g.descriptionId,"aria-labelledby":r?void 0:n||g.titleId,"aria-label":r||void 0,"data-state":E(g.open)},p,{ref:x,onDismiss:()=>g.onOpenChange(!1)}))),!1)}));function E(e){return e?"open":"closed"}const O=/*#__PURE__*/React.createContext({contentName:"DialogContent",titleName:"DialogTitle",docsSlug:"dialog"});O.Provider;const Root=Dialog;const Trigger=DialogTrigger;const Overlay=DialogOverlay;const Content=DialogContent;

export { Content, Dialog, DialogContent, DialogOverlay, DialogTrigger, Overlay, Root, Trigger };
