import { useLayoutEffect } from '../../react-use-layout-effect/dist/index.module.js';
import { useComposedRefs } from '../../react-compose-refs/dist/index.module.js';
import * as React from 'react';

const Presence=u=>{const{present:o,children:s}=u,i=function(n){const[u,o]=React.useState(),s=React.useRef({}),i=React.useRef(n),c=React.useRef("none"),d=n?"mounted":"unmounted",[m,a]=function(e,n){return React.useReducer(((e,t)=>{const r=n[e][t];return null!=r?r:e}),e)}(d,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return React.useEffect((()=>{const e=r(s.current);c.current="mounted"===m?e:"none";}),[m]),useLayoutEffect((()=>{const e=s.current,t=i.current;if(t!==n){const u=c.current,o=r(e);if(n)a("MOUNT");else if("none"===o||"none"===(null==e?void 0:e.display))a("UNMOUNT");else {const e=u!==o;a(t&&e?"ANIMATION_OUT":"UNMOUNT");}i.current=n;}}),[n,a]),useLayoutEffect((()=>{if(u){const e=e=>{const n=r(s.current).includes(e.animationName);e.target===u&&n&&a("ANIMATION_END");};return u.addEventListener("animationcancel",e),u.addEventListener("animationend",e),()=>{u.removeEventListener("animationcancel",e),u.removeEventListener("animationend",e);}}}),[u,a]),{isPresent:["mounted","unmountSuspended"].includes(m),ref:React.useCallback((e=>{e&&(s.current=getComputedStyle(e)),o(e);}),[])}}(o),c="function"==typeof s?s({present:i.isPresent}):React.Children.only(s),d=useComposedRefs(i.ref,c.ref);return "function"==typeof s||i.isPresent?/*#__PURE__*/React.cloneElement(c,{ref:d}):null};function r(e){return (null==e?void 0:e.animationName)||"none"}Presence.displayName="Presence";

export { Presence };
