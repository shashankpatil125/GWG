import { useCallbackRef } from '../../react-use-callback-ref/dist/index.module.js';
import { Sub, Root as Root$1, Anchor, Content as Content$1, Label as Label$1, Item as Item$1, CheckboxItem as CheckboxItem$1, RadioGroup as RadioGroup$1, RadioItem as RadioItem$1, ItemIndicator as ItemIndicator$1 } from '../../react-menu/dist/index.module.js';
import { Primitive } from '../../react-primitive/dist/index.module.js';
import { createContext } from '../../react-context/dist/index.module.js';
import { composeEventHandlers } from '../../primitive/dist/index.module.js';
import * as React from 'react';
import _extends from '../../../@babel/runtime/helpers/esm/extends.js';

const[u,i]=createContext("ContextMenu");const ContextMenu=o=>{const{children:n,onOpenChange:r,dir:c,modal:i=!0}=o,[l,m]=React.useState(!1),s=React.useContext(x),p=useCallbackRef(r),f=React.useCallback((e=>{m(e),p(e);}),[p]);return s?/*#__PURE__*/React.createElement(u,{isRootMenu:!1,open:l,onOpenChange:f,modal:i},/*#__PURE__*/React.createElement(Sub,{open:l,onOpenChange:f},n)):/*#__PURE__*/React.createElement(u,{isRootMenu:!0,open:l,onOpenChange:f,modal:i},/*#__PURE__*/React.createElement(Root$1,{dir:c,open:l,onOpenChange:f,modal:i},n))};const ContextMenuTrigger=/*#__PURE__*/React.forwardRef(((e,n)=>{const u=i("ContextMenuTrigger"),l=React.useRef({x:0,y:0}),s=React.useRef({getBoundingClientRect:()=>DOMRect.fromRect({width:0,height:0,...l.current})}),p=React.useRef(0),f=React.useCallback((()=>window.clearTimeout(p.current)),[]),d=e=>{l.current={x:e.clientX,y:e.clientY},u.onOpenChange(!0);};return React.useEffect((()=>f),[f]),/*#__PURE__*/React.createElement(x.Provider,{value:!1},/*#__PURE__*/React.createElement(Anchor,{virtualRef:s}),/*#__PURE__*/React.createElement(Primitive.span,_extends({},e,{ref:n,style:{WebkitTouchCallout:"none",...e.style},onContextMenu:composeEventHandlers(e.onContextMenu,(e=>{f(),e.preventDefault(),d(e);})),onPointerDown:composeEventHandlers(e.onPointerDown,m((e=>{f(),p.current=window.setTimeout((()=>d(e)),700);}))),onPointerMove:composeEventHandlers(e.onPointerMove,m(f)),onPointerCancel:composeEventHandlers(e.onPointerCancel,m(f)),onPointerUp:composeEventHandlers(e.onPointerUp,m(f))})))}));const x=/*#__PURE__*/React.createContext(!1);const ContextMenuContent=/*#__PURE__*/React.forwardRef(((e,o)=>{const n=i("ContextMenuContent"),r={...e,style:{...e.style,"--radix-context-menu-content-transform-origin":"var(--radix-popper-transform-origin)"}};return React.createElement(x.Provider,{value:!0},n.isRootMenu?/*#__PURE__*/React.createElement(l,_extends({},r,{ref:o})):/*#__PURE__*/React.createElement(Content$1,_extends({},r,{ref:o})))}));const l=/*#__PURE__*/React.forwardRef(((e,o)=>{const n=i("ContextMenuContent"),r=React.useRef(!1);return React.createElement(Content$1,_extends({},e,{ref:o,portalled:!0,side:"right",sideOffset:2,align:"start",onCloseAutoFocus:t=>{var o;null===(o=e.onCloseAutoFocus)||void 0===o||o.call(e,t),!t.defaultPrevented&&r.current&&t.preventDefault(),r.current=!1;},onInteractOutside:t=>{var o;null===(o=e.onInteractOutside)||void 0===o||o.call(e,t),t.defaultPrevented||n.modal||(r.current=!0);}}))}));const ContextMenuLabel=/*#__PURE__*/React.forwardRef(((e,o)=>/*#__PURE__*/React.createElement(Label$1,_extends({},e,{ref:o}))));const ContextMenuItem=/*#__PURE__*/React.forwardRef(((e,o)=>/*#__PURE__*/React.createElement(Item$1,_extends({},e,{ref:o}))));const ContextMenuCheckboxItem=/*#__PURE__*/React.forwardRef(((e,o)=>/*#__PURE__*/React.createElement(CheckboxItem$1,_extends({},e,{ref:o}))));const ContextMenuRadioGroup=/*#__PURE__*/React.forwardRef(((e,o)=>/*#__PURE__*/React.createElement(RadioGroup$1,_extends({},e,{ref:o}))));const ContextMenuRadioItem=/*#__PURE__*/React.forwardRef(((e,o)=>/*#__PURE__*/React.createElement(RadioItem$1,_extends({},e,{ref:o}))));const ContextMenuItemIndicator=/*#__PURE__*/React.forwardRef(((e,o)=>/*#__PURE__*/React.createElement(ItemIndicator$1,_extends({},e,{ref:o}))));function m(e){return t=>"mouse"!==t.pointerType?e(t):void 0}const Root=ContextMenu;const Trigger=ContextMenuTrigger;const Content=ContextMenuContent;const Label=ContextMenuLabel;const Item=ContextMenuItem;const CheckboxItem=ContextMenuCheckboxItem;const RadioGroup=ContextMenuRadioGroup;const RadioItem=ContextMenuRadioItem;const ItemIndicator=ContextMenuItemIndicator;

export { CheckboxItem, Content, ContextMenu, ContextMenuCheckboxItem, ContextMenuContent, ContextMenuItem, ContextMenuItemIndicator, ContextMenuLabel, ContextMenuRadioGroup, ContextMenuRadioItem, ContextMenuTrigger, Item, ItemIndicator, Label, RadioGroup, RadioItem, Root, Trigger };
