import { useCallbackRef } from '../../react-use-callback-ref/dist/index.module.js';
import * as React from 'react';

function useControllableState({prop:o,defaultProp:r,onChange:n=(()=>{})}){const[a,u]=function({defaultProp:o,onChange:r}){const n=React.useState(o),[a]=n,u=React.useRef(a),c=useCallbackRef(r);return React.useEffect((()=>{u.current!==a&&(c(a),u.current=a);}),[a,u,c]),n}({defaultProp:r,onChange:n}),c=void 0!==o,f=c?o:a,l=useCallbackRef(n);return [f,React.useCallback((e=>{if(c){const t=e,r="function"==typeof e?t(o):e;r!==o&&l(r);}else u(e);}),[c,o,u,l])]}

export { useControllableState };
